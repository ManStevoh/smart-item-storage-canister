type SmartStorageItem = record {
  id: nat64;
  name: text;
  description: text;
  location: text;
  created_at: nat64;
  updated_at: opt nat64;
  is_available: bool;
};

type SmartStorageItemPayload = record {
  name: text;
  description: text;
  location: text;
  is_available: bool;
};

type Error = variant { NotFound: record { msg: text } };

service : {
  get_smart_storage_item: (nat64) -> (variant { Ok: SmartStorageItem; Err: Error }) query;
  get_all_smart_storage_items: () -> (vec SmartStorageItem);
  get_available_smart_storage_items: () -> (vec SmartStorageItem);
  search_smart_storage_items: (text) -> (vec SmartStorageItem);
  add_smart_storage_item: (SmartStorageItemPayload) -> (opt SmartStorageItem);
  update_smart_storage_item: (nat64, SmartStorageItemPayload) -> (variant { Ok: SmartStorageItem; Err: Error });
  is_item_available: (nat64) -> (variant { Ok: bool; Err: Error }) query;
  mark_item_as_available: (nat64) -> (variant { Ok: SmartStorageItem; Err: Error });
  mark_item_as_unavailable: (nat64) -> (variant { Ok: SmartStorageItem; Err: Error });
  delete_smart_storage_item: (nat64) -> (variant { Ok: SmartStorageItem; Err: Error });
};